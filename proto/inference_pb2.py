# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: inference.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'inference.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0finference.proto\x12\tinference\"\x07\n\x05\x45mpty\"\x1d\n\x0ePredictRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"\"\n\x0fPredictResponse\x12\x0f\n\x07objects\x18\x01 \x03(\t\"Q\n\x1dPredictWithConfidenceResponse\x12\x30\n\x07objects\x18\x01 \x03(\x0b\x32\x1f.inference.ObjectWithConfidence\"9\n\x14ObjectWithConfidence\x12\r\n\x05label\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\"#\n\x13\x42\x61tchPredictRequest\x12\x0c\n\x04urls\x18\x01 \x03(\t\"F\n\x14\x42\x61tchPredictResponse\x12.\n\x07results\x18\x01 \x03(\x0b\x32\x1d.inference.BatchPredictResult\"A\n\x12\x42\x61tchPredictResult\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x0f\n\x07objects\x18\x02 \x03(\t\x12\r\n\x05\x65rror\x18\x03 \x01(\t\"[\n\x19PredictWithOptionsRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x1c\n\x14\x63onfidence_threshold\x18\x02 \x01(\x02\x12\x13\n\x0bmax_objects\x18\x03 \x01(\x05\"T\n\tModelInfo\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x0e\n\x06\x64\x65vice\x18\x03 \x01(\t\x12\x12\n\ncategories\x18\x04 \x03(\t\"6\n\x0eHealthResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x14\n\x0cmodel_loaded\x18\x02 \x01(\x08\x32\xcf\x03\n\x10InstanceDetector\x12@\n\x07Predict\x12\x19.inference.PredictRequest\x1a\x1a.inference.PredictResponse\x12\\\n\x15PredictWithConfidence\x12\x19.inference.PredictRequest\x1a(.inference.PredictWithConfidenceResponse\x12O\n\x0c\x42\x61tchPredict\x12\x1e.inference.BatchPredictRequest\x1a\x1f.inference.BatchPredictResponse\x12V\n\x12PredictWithOptions\x12$.inference.PredictWithOptionsRequest\x1a\x1a.inference.PredictResponse\x12\x36\n\x0cGetModelInfo\x12\x10.inference.Empty\x1a\x14.inference.ModelInfo\x12:\n\x0bHealthCheck\x12\x10.inference.Empty\x1a\x19.inference.HealthResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'inference_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_EMPTY']._serialized_start=30
  _globals['_EMPTY']._serialized_end=37
  _globals['_PREDICTREQUEST']._serialized_start=39
  _globals['_PREDICTREQUEST']._serialized_end=68
  _globals['_PREDICTRESPONSE']._serialized_start=70
  _globals['_PREDICTRESPONSE']._serialized_end=104
  _globals['_PREDICTWITHCONFIDENCERESPONSE']._serialized_start=106
  _globals['_PREDICTWITHCONFIDENCERESPONSE']._serialized_end=187
  _globals['_OBJECTWITHCONFIDENCE']._serialized_start=189
  _globals['_OBJECTWITHCONFIDENCE']._serialized_end=246
  _globals['_BATCHPREDICTREQUEST']._serialized_start=248
  _globals['_BATCHPREDICTREQUEST']._serialized_end=283
  _globals['_BATCHPREDICTRESPONSE']._serialized_start=285
  _globals['_BATCHPREDICTRESPONSE']._serialized_end=355
  _globals['_BATCHPREDICTRESULT']._serialized_start=357
  _globals['_BATCHPREDICTRESULT']._serialized_end=422
  _globals['_PREDICTWITHOPTIONSREQUEST']._serialized_start=424
  _globals['_PREDICTWITHOPTIONSREQUEST']._serialized_end=515
  _globals['_MODELINFO']._serialized_start=517
  _globals['_MODELINFO']._serialized_end=601
  _globals['_HEALTHRESPONSE']._serialized_start=603
  _globals['_HEALTHRESPONSE']._serialized_end=657
  _globals['_INSTANCEDETECTOR']._serialized_start=660
  _globals['_INSTANCEDETECTOR']._serialized_end=1123
# @@protoc_insertion_point(module_scope)
