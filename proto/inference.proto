syntax = "proto3";
package inference;

service InstanceDetector {
  // Basic prediction
  rpc Predict(PredictRequest) returns (PredictResponse);
  
  // Prediction with confidence scores
  rpc PredictWithConfidence(PredictRequest) returns (PredictWithConfidenceResponse);
  
  // Batch prediction
  rpc BatchPredict(BatchPredictRequest) returns (BatchPredictResponse);
  
  // Prediction with custom options
  rpc PredictWithOptions(PredictWithOptionsRequest) returns (PredictResponse);
  
  // Get model information
  rpc GetModelInfo(Empty) returns (ModelInfo);
  
  // Health check
  rpc HealthCheck(Empty) returns (HealthResponse);
}

message Empty {}

message PredictRequest {
  string url = 1;
}

message PredictResponse {
  repeated string objects = 1;
}

message PredictWithConfidenceResponse {
  repeated ObjectWithConfidence objects = 1;
}

message ObjectWithConfidence {
  string label = 1;
  float confidence = 2;
}

message BatchPredictRequest {
  repeated string urls = 1;
}

message BatchPredictResponse {
  repeated BatchPredictResult results = 1;
}

message BatchPredictResult {
  string url = 1;
  repeated string objects = 2;
  string error = 3;
}

message PredictWithOptionsRequest {
  string url = 1;
  float confidence_threshold = 2;
  int32 max_objects = 3;
}

message ModelInfo {
  string model_name = 1;
  string version = 2;
  string device = 3;
  repeated string categories = 4;
}

message HealthResponse {
  string status = 1;
  bool model_loaded = 2;
} 